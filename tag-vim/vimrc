source ~/.vim/setup/settings.vim
source ~/.vim/setup/filetypes.vim
source ~/.vim/setup/mappings.vim

set rtp+=~/.vim,~/.vim/bundle/vundle/

call vundle#rc()

" let Vundle manage Vundle - required!
Bundle 'gmarik/vundle'

""" Color Theme

Bundle 'altercation/vim-colors-solarized'
let g:solarized_menu = 0
let g:solarized_contrast = "high"
set background=light
color solarized

""" Language Support

Bundle 'kchmck/vim-coffee-script'
nmap <leader>j :CoffeeCompile<cr>
vmap <leader>j :CoffeeCompile<cr>

Bundle 'chrisbra/csv.vim'
Bundle 'elixir-lang/vim-elixir'
Bundle 'jimenezrick/vimerl'
Bundle 'tpope/vim-haml'
Bundle 'nono/vim-handlebars'
Bundle 'digitaltoad/vim-jade'
Bundle 'pangloss/vim-javascript'
Bundle 'elzr/vim-json'
Bundle 'groenewege/vim-less'
Bundle 'tpope/vim-markdown'
Bundle 'mmalecki/vim-node.js'
Bundle 'vim-ruby/vim-ruby'
Bundle 'rosstimson/scala-vim-support'
Bundle 'cakebaker/scss-syntax.vim'
Bundle 'wavded/vim-stylus'
Bundle 'timcharper/textile.vim'

""" Tools

Bundle 'rking/ag.vim'
nmap <leader>a :Ag -S 
nmap <leader>A :AgFromSearch<cr>

Bundle 'jeetsukumaran/vim-buffergator'
nmap <leader>b :BuffergatorToggle<cr>

Bundle 'tpope/vim-bundler'
Bundle 'ap/vim-css-color'

let g:ctrlp_map = '<C-t>'
if exists(getcwd()."/.git")
  let g:ctrlp_working_path_mode = 2
else
  let g:ctrlp_working_path_mode = 0
end
let g:ctrlp_cache_dir = getcwd()."/.ctrlp_cache"
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_custom_ignore = {
  \ 'dir': '\v[\/](_site|app-js|app-cov|test/support/public)'
  \ }
Bundle 'kien/ctrlp.vim'
imap <C-t> <esc>:CtrlP<cr>

Bundle 'tpope/vim-dispatch'
Bundle 'editorconfig/editorconfig-vim'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-eunuch'

Bundle 'tpope/vim-fugitive'
nmap <leader>gb :Gblame<CR>
nmap <leader>gs :Gstatus<CR>
nmap <leader>gd :Gdiff<CR>
nmap <leader>gl :Glog<CR>
nmap <leader>gc :Gcommit<CR>
nmap <leader>gA :Gcommit --amend -v<CR>
nmap <leader>gv :Gcommit -v<CR>
nmap <leader>gp :Git push<CR>

Bundle 'tpope/vim-git'
Bundle 'mattn/gist-vim'
"Bundle 'airblade/vim-gitgutter'  " disabled because makes things slow

Bundle 'junegunn/goyo.vim'
Bundle 'amix/vim-zenroom2'
nmap <leader>z :Goyo<cr>

Bundle 'sjl/gundo.vim'
Bundle 'michaeljsmith/vim-indent-object'

Bundle 'rgarver/Kwbd.vim'
nmap <C-W>! <Plug>Kwbd

Bundle 'edsono/vim-matchit'
Bundle 'chrisbra/NrrwRgn'

Bundle 'scrooloose/nerdcommenter'
vmap <leader>/ <plug>NERDCommenterToggle<CR>

Bundle 'scrooloose/nerdtree'
let NERDTreeChDirMode = 2
let NERDTreeIgnore = ['\.git$', '\.pyc$', '\.pyo$', '\.rbc$', '\.rbo$', '\.class$', '\.o$', '\~$', '^tmp$', '^log$', '\.bundle$', '\.sass-cache', '\.ctrlp_cache', '\.swp$', '^build$', '^coverage$', '\.sock$']
let NERDTreeQuitOnOpen = 1
let NERDTreeShowHidden = 1
nmap <leader>n :NERDTreeToggle<cr>
nmap <leader>N :NERDTreeFind<cr>

Bundle 'dsawardekar/portkey'

let g:Powerline_symbols = 'fancy'
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

Bundle 'tpope/vim-repeat'

Bundle 'duff/vim-scratch'
nmap <leader><tab>  :Scratch<cr>

Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'tpope/vim-surround'

let g:syntastic_mode_map = { 'mode': 'active', 'passive_filetypes': ['html'] }
Bundle 'scrooloose/syntastic'
let g:syntastic_enable_signs=1
let g:syntastic_quiet_warnings=0
let g:syntastic_auto_loc_list=2

Bundle 'godlygeek/tabular'
"AddTabularPattern first_comma /^[^,]*,\zs/l0l1
nmap <leader>.= :Tabularize /=<CR>
vmap <leader>.= :Tabularize /=<CR>
nmap <leader>.> :Tabularize /=><CR>
vmap <leader>.> :Tabularize /=><CR>
nmap <leader>., :Tabularize /,\zs/l0l1<CR>
vmap <leader>., :Tabularize /,\zs/l0l1<CR>
nmap <leader>.: :Tabularize /:\zs/l0l1<CR>
vmap <leader>.: :Tabularize /:\zs/l0l1<CR>

Bundle 'majutsushi/tagbar'
nmap <leader>tb :TagbarToggle<CR>

Bundle 'kana/vim-textobj-user'
Bundle 'nelstrom/vim-textobj-rubyblock'
Bundle 'tomtom/tlib_vim'
Bundle 'christoomey/vim-tmux-navigator'

Bundle 'SirVer/ultisnips'
let g:UltiSnipsListSnippets="<S-C-J>"
let g:UltiSnipsExpandTrigger="<C-J>"
let g:UltiSnipsJumpForwardTrigger="<C-J>"
let g:UltiSnipsJumpBackwardTrigger="<C-K>"

Bundle 'tpope/vim-unimpaired'

Bundle 'benmills/vimux'
nmap <leader>tp :VimuxPromptCommand<cr>
nmap <leader>tl :VimuxRunLastCommand<cr>
nmap <leader>ti :VimuxInspectRunner<cr>
nmap <leader>tx :VimuxClosePanes<cr>
nmap <leader>ts :VimuxInterruptRunner<cr>

let g:vitality_fix_focus = 0 " don't let vitality mess up things with focus handling
Bundle 'sjl/vitality.vim'

Bundle 'skalnik/vim-vroom'
Bundle 'mattn/webapi-vim'
Bundle 'vim-scripts/YankRing.vim'
Bundle 'Valloric/YouCompleteMe'
Bundle 'itspriddle/ZoomWin'

" Framework Support

Bundle 't9md/vim-chef'
nmap <C-Tab> :ChefFindAny<CR>

Bundle 'tpope/vim-cucumber'
Bundle 'dsawardekar/ember.vim'
Bundle 'sunaku/vim-ruby-minitest'
Bundle 'ajf/puppet-vim'
Bundle 'tpope/vim-rails'

let g:rspec_command = 'call VimuxRunCommand("spring rspec {spec}")'
Bundle 'thoughtbot/vim-rspec'
nmap <leader>rt :call RunCurrentSpecFile()<CR>
nmap <leader>rs :call RunNearestSpec()<CR>
nmap <leader>rl :call RunLastSpec()<CR>

" Turn on filetype plugins and syntax highlighting
" needs to be at the end when rtp already includes paths for all ftdetect dirs
filetype plugin indent on
syntax enable
